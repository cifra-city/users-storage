openapi: 3.0.0
info:
  description: SSO REST API for Cifra app
  title: Cifra SSO REST API
  version: 0.0.1
servers:
- url: /
paths:
  /users/create:
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        "201":
          description: Created
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Conflict
      summary: Create a new user
components:
  responses:
    conflict:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Conflict
  schemas:
    UserCreate:
      example:
        data:
          attributes:
            bio: I'm a developer
            avatar: avatar
            title: title
            username: username
            status: status
          type: user_create
      properties:
        data:
          $ref: '#/components/schemas/UserCreate_data'
      required:
      - data
      type: object
    UserUpdate:
      properties:
        data:
          $ref: '#/components/schemas/UserUpdate_data'
      required:
      - data
      type: object
    User:
      properties:
        data:
          $ref: '#/components/schemas/User_data'
      required:
      - data
      type: object
    UserCollection:
      properties:
        data:
          items:
            $ref: '#/components/schemas/User_data'
          type: array
      required:
      - data
      type: object
    Errors:
      description: Standard JSON:API error
      properties:
        errors:
          description: Non empty array of errors occurred during request processing
          items:
            $ref: '#/components/schemas/Errors_errors_inner'
          type: array
      required:
      - errors
      type: object
    UserCreate_data_attributes:
      example:
        bio: I'm a developer
        avatar: avatar
        title: title
        username: username
        status: status
      properties:
        username:
          description: Username
          type: string
        title:
          description: User title
          type: string
        status:
          description: User status
          type: string
        avatar:
          description: User avatar
          type: string
        bio:
          description: User bio
          example: I'm a developer
          type: string
      required:
      - avatar
      - bio
      - status
      - title
      - username
      type: object
    UserCreate_data:
      example:
        attributes:
          bio: I'm a developer
          avatar: avatar
          title: title
          username: username
          status: status
        type: user_create
      properties:
        type:
          enum:
          - user_create
          type: string
        attributes:
          $ref: '#/components/schemas/UserCreate_data_attributes'
      required:
      - attributes
      - type
      type: object
    UserUpdate_data_attributes:
      properties:
        username:
          description: Username
          type: string
        title:
          description: User title
          type: string
        status:
          description: User status
          type: string
        avatar:
          description: User avatar
          type: string
        bio:
          description: User bio
          example: I'm a developer
          type: string
      type: object
    UserUpdate_data:
      properties:
        type:
          enum:
          - user_cahnge
          type: string
        attributes:
          $ref: '#/components/schemas/UserUpdate_data_attributes'
      required:
      - attributes
      - type
      type: object
    User_data_attributes:
      properties:
        id:
          description: User ID
          type: string
        username:
          description: Username
          type: string
        title:
          description: User title
          type: string
        status:
          description: User status
          type: string
        avatar:
          description: User avatar
          type: string
        bio:
          description: User bio
          example: I'm a developer
          type: string
      required:
      - avatar
      - bio
      - id
      - status
      - title
      - username
      type: object
    User_data:
      properties:
        type:
          enum:
          - user
          type: string
        attributes:
          $ref: '#/components/schemas/User_data_attributes'
      required:
      - attributes
      - type
      type: object
    Errors_errors_inner:
      properties:
        title:
          description: "Title is a short, human-readable summary of the problem"
          example: Bad Request
          type: string
        detail:
          description: Detail is a human-readable explanation specific to this occurrence
            of the problem
          example: Request body was expected
          type: string
        status:
          description: Status is the HTTP status code applicable to this problem
          enum:
          - 400
          - 401
          - 403
          - 404
          - 409
          - 500
          example: 400
          type: integer
      required:
      - status
      - title
      type: object
