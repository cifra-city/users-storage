/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MemberDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberDataAttributes{}

// MemberDataAttributes struct for MemberDataAttributes
type MemberDataAttributes struct {
	// User ID
	UserId string `json:"userId"`
	// User role
	Role string `json:"role"`
	// Description
	Description string `json:"description"`
	// User created at
	CreatedAt time.Time `json:"created_at"`
}

type _MemberDataAttributes MemberDataAttributes

// NewMemberDataAttributes instantiates a new MemberDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberDataAttributes(userId string, role string, description string, createdAt time.Time) *MemberDataAttributes {
	this := MemberDataAttributes{}
	this.UserId = userId
	this.Role = role
	this.Description = description
	this.CreatedAt = createdAt
	return &this
}

// NewMemberDataAttributesWithDefaults instantiates a new MemberDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberDataAttributesWithDefaults() *MemberDataAttributes {
	this := MemberDataAttributes{}
	return &this
}

// GetUserId returns the UserId field value
func (o *MemberDataAttributes) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *MemberDataAttributes) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *MemberDataAttributes) SetUserId(v string) {
	o.UserId = v
}

// GetRole returns the Role field value
func (o *MemberDataAttributes) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *MemberDataAttributes) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *MemberDataAttributes) SetRole(v string) {
	o.Role = v
}

// GetDescription returns the Description field value
func (o *MemberDataAttributes) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *MemberDataAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *MemberDataAttributes) SetDescription(v string) {
	o.Description = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *MemberDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MemberDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MemberDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o MemberDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["role"] = o.Role
	toSerialize["description"] = o.Description
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *MemberDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userId",
		"role",
		"description",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMemberDataAttributes := _MemberDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMemberDataAttributes)

	if err != nil {
		return err
	}

	*o = MemberDataAttributes(varMemberDataAttributes)

	return err
}

type NullableMemberDataAttributes struct {
	value *MemberDataAttributes
	isSet bool
}

func (v NullableMemberDataAttributes) Get() *MemberDataAttributes {
	return v.value
}

func (v *NullableMemberDataAttributes) Set(val *MemberDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberDataAttributes(val *MemberDataAttributes) *NullableMemberDataAttributes {
	return &NullableMemberDataAttributes{value: val, isSet: true}
}

func (v NullableMemberDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


