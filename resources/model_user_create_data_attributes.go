/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserCreateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCreateDataAttributes{}

// UserCreateDataAttributes struct for UserCreateDataAttributes
type UserCreateDataAttributes struct {
	// Username
	Username string `json:"username"`
	// User title
	Title string `json:"title"`
	// User status
	Status string `json:"status"`
	// User avatar
	Avatar string `json:"avatar"`
	// User bio
	Bio string `json:"bio"`
}

type _UserCreateDataAttributes UserCreateDataAttributes

// NewUserCreateDataAttributes instantiates a new UserCreateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateDataAttributes(username string, title string, status string, avatar string, bio string) *UserCreateDataAttributes {
	this := UserCreateDataAttributes{}
	this.Username = username
	this.Title = title
	this.Status = status
	this.Avatar = avatar
	this.Bio = bio
	return &this
}

// NewUserCreateDataAttributesWithDefaults instantiates a new UserCreateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateDataAttributesWithDefaults() *UserCreateDataAttributes {
	this := UserCreateDataAttributes{}
	return &this
}

// GetUsername returns the Username field value
func (o *UserCreateDataAttributes) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *UserCreateDataAttributes) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *UserCreateDataAttributes) SetUsername(v string) {
	o.Username = v
}

// GetTitle returns the Title field value
func (o *UserCreateDataAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *UserCreateDataAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *UserCreateDataAttributes) SetTitle(v string) {
	o.Title = v
}

// GetStatus returns the Status field value
func (o *UserCreateDataAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *UserCreateDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *UserCreateDataAttributes) SetStatus(v string) {
	o.Status = v
}

// GetAvatar returns the Avatar field value
func (o *UserCreateDataAttributes) GetAvatar() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value
// and a boolean to check if the value has been set.
func (o *UserCreateDataAttributes) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Avatar, true
}

// SetAvatar sets field value
func (o *UserCreateDataAttributes) SetAvatar(v string) {
	o.Avatar = v
}

// GetBio returns the Bio field value
func (o *UserCreateDataAttributes) GetBio() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bio
}

// GetBioOk returns a tuple with the Bio field value
// and a boolean to check if the value has been set.
func (o *UserCreateDataAttributes) GetBioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bio, true
}

// SetBio sets field value
func (o *UserCreateDataAttributes) SetBio(v string) {
	o.Bio = v
}

func (o UserCreateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCreateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["username"] = o.Username
	toSerialize["title"] = o.Title
	toSerialize["status"] = o.Status
	toSerialize["avatar"] = o.Avatar
	toSerialize["bio"] = o.Bio
	return toSerialize, nil
}

func (o *UserCreateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"username",
		"title",
		"status",
		"avatar",
		"bio",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserCreateDataAttributes := _UserCreateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserCreateDataAttributes)

	if err != nil {
		return err
	}

	*o = UserCreateDataAttributes(varUserCreateDataAttributes)

	return err
}

type NullableUserCreateDataAttributes struct {
	value *UserCreateDataAttributes
	isSet bool
}

func (v NullableUserCreateDataAttributes) Get() *UserCreateDataAttributes {
	return v.value
}

func (v *NullableUserCreateDataAttributes) Set(val *UserCreateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateDataAttributes(val *UserCreateDataAttributes) *NullableUserCreateDataAttributes {
	return &NullableUserCreateDataAttributes{value: val, isSet: true}
}

func (v NullableUserCreateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


